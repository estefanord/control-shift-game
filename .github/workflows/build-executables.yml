name: Build Cross-Platform Executables

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pygame>=2.6.0
    
    - name: Test game runs
      run: |
        python -c "import pygame; print('Pygame works')"
        python -c "import src.game; print('Game imports work')"
    
    - name: Create Windows package
      run: |
        mkdir Control_Shift_Windows
        mkdir Control_Shift_Windows\assets
        mkdir Control_Shift_Windows\src
        copy main.py Control_Shift_Windows\
        copy src\*.py Control_Shift_Windows\src\
        xcopy assets Control_Shift_Windows\assets /E /I
        echo python main.py > Control_Shift_Windows\run_game.bat
        echo pause >> Control_Shift_Windows\run_game.bat
        powershell Compress-Archive -Path "Control_Shift_Windows" -DestinationPath "Control_Shift_Windows_PC.zip"
    
    - name: Upload Windows package
      uses: actions/upload-artifact@v4
      with:
        name: windows-game
        path: Control_Shift_Windows_PC.zip

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pygame>=2.6.0
    
    - name: Create macOS package
      run: |
        mkdir Control_Shift_Mac
        mkdir -p Control_Shift_Mac/assets Control_Shift_Mac/src
        cp main.py Control_Shift_Mac/
        cp src/*.py Control_Shift_Mac/src/
        cp -r assets/* Control_Shift_Mac/assets/
        echo '#!/bin/bash' > Control_Shift_Mac/run_game.sh
        echo 'cd "$(dirname "$0")"' >> Control_Shift_Mac/run_game.sh
        echo 'python3 main.py' >> Control_Shift_Mac/run_game.sh
        chmod +x Control_Shift_Mac/run_game.sh
        zip -r Control_Shift_macOS.zip Control_Shift_Mac
    
    - name: Upload macOS package
      uses: actions/upload-artifact@v4
      with:
        name: macos-game
        path: Control_Shift_macOS.zip

  create-web-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Create web version
      run: |
        cp working_web_version/index.html Control_Shift_Web_Browser.html
        zip Control_Shift_Web_Browser.zip Control_Shift_Web_Browser.html
    
    - name: Upload web version
      uses: actions/upload-artifact@v4
      with:
        name: web-game
        path: Control_Shift_Web_Browser.zip

  create-instructions:
    runs-on: ubuntu-latest
    steps:
    - name: Create instructions
      run: |
        cat > INSTRUCTIONS.txt << 'EOF'
        CONTROL SHIFT GAME - INSTALLATION INSTRUCTIONS

        WINDOWS:
        1. Extract Control_Shift_Windows_PC.zip
        2. Install Python 3.11+ from python.org
        3. Open command prompt in the extracted folder
        4. Run: pip install pygame
        5. Double-click run_game.bat OR run: python main.py

        MAC:
        1. Extract Control_Shift_macOS.zip  
        2. Install Python 3.11+ (should already be installed)
        3. Open terminal in the extracted folder
        4. Run: pip3 install pygame
        5. Double-click run_game.sh OR run: python3 main.py

        WEB:
        1. Extract Control_Shift_Web_Browser.zip
        2. Open Control_Shift_Web_Browser.html in any web browser

        All versions include full game with 7 levels and sound!
        EOF
    
    - name: Upload instructions
      uses: actions/upload-artifact@v4
      with:
        name: instructions
        path: INSTRUCTIONS.txt

  combine-all:
    needs: [build-windows, build-macos, create-web-version, create-instructions]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Combine everything
      run: |
        mkdir final-release
        cp windows-game/* final-release/ 2>/dev/null || true
        cp macos-game/* final-release/ 2>/dev/null || true  
        cp web-game/* final-release/ 2>/dev/null || true
        cp instructions/* final-release/ 2>/dev/null || true
        ls -la final-release/
    
    - name: Upload complete release
      uses: actions/upload-artifact@v4
      with:
        name: Control-Shift-Complete-Release
        path: final-release/ 