name: Build Cross-Platform Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pygame>=2.6.0 pyinstaller>=6.10.0
    
    - name: Build Windows executable
      run: |
        pyinstaller --onefile --windowed --name=Control_Shift_Windows --add-data="assets/music;assets/music" --add-data="assets/sfx;assets/sfx" --add-data="assets/sprites;assets/sprites" --add-data="src;src" --distpath=dist/windows --clean main.py
    
    - name: Create Windows package
      run: |
        mkdir packages
        powershell Compress-Archive -Path "dist/windows/*" -DestinationPath "packages/Control_Shift_Windows_PC.zip"
    
    - name: Upload Windows package
      uses: actions/upload-artifact@v3
      with:
        name: windows-executable
        path: packages/Control_Shift_Windows_PC.zip

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pygame>=2.6.0 pyinstaller>=6.10.0
    
    - name: Build macOS executable
      run: |
        pyinstaller --onefile --windowed --name=Control_Shift_Mac --add-data="assets/music:assets/music" --add-data="assets/sfx:assets/sfx" --add-data="assets/sprites:assets/sprites" --add-data="src:src" --distpath=dist/mac --clean main.py
    
    - name: Create macOS package
      run: |
        mkdir packages
        cd dist/mac && zip -r ../../packages/Control_Shift_macOS.zip . && cd ../..
    
    - name: Upload macOS package
      uses: actions/upload-artifact@v3
      with:
        name: macos-executable
        path: packages/Control_Shift_macOS.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev libasound2-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pygame>=2.6.0 pyinstaller>=6.10.0
    
    - name: Build Linux executable
      run: |
        pyinstaller --onefile --windowed --name=Control_Shift_Linux --add-data="assets/music:assets/music" --add-data="assets/sfx:assets/sfx" --add-data="assets/sprites:assets/sprites" --add-data="src:src" --distpath=dist/linux --clean main.py
    
    - name: Create Linux package
      run: |
        mkdir packages
        cd dist/linux && zip -r ../../packages/Control_Shift_Linux.zip . && cd ../..
    
    - name: Upload Linux package
      uses: actions/upload-artifact@v3
      with:
        name: linux-executable
        path: packages/Control_Shift_Linux.zip

  create-web-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Create web version
      run: |
        mkdir packages
        cp working_web_version/index.html packages/
        cd packages && zip Control_Shift_Web_Browser.zip index.html
    
    - name: Upload web version
      uses: actions/upload-artifact@v3
      with:
        name: web-version
        path: packages/Control_Shift_Web_Browser.zip

  combine-releases:
    needs: [build-windows, build-macos, build-linux, create-web-version]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Combine all packages
      run: |
        mkdir final-packages
        cp windows-executable/* final-packages/
        cp macos-executable/* final-packages/
        cp linux-executable/* final-packages/
        cp web-version/* final-packages/
        ls -la final-packages/
    
    - name: Upload final release packages
      uses: actions/upload-artifact@v3
      with:
        name: all-platforms-release
        path: final-packages/ 